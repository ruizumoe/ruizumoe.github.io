<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Unity游戏素材整理 on Ruizumoe&#39;Blog</title>
        <link>https://ruizumoe.github.io/tags/unity%E6%B8%B8%E6%88%8F%E7%B4%A0%E6%9D%90%E6%95%B4%E7%90%86/</link>
        <description>Recent content in Unity游戏素材整理 on Ruizumoe&#39;Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 05 Mar 2023 19:16:27 +0800</lastBuildDate><atom:link href="https://ruizumoe.github.io/tags/unity%E6%B8%B8%E6%88%8F%E7%B4%A0%E6%9D%90%E6%95%B4%E7%90%86/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>麦田物语开发日记(一)</title>
        <link>https://ruizumoe.github.io/p/%E9%BA%A6%E7%94%B0%E7%89%A9%E8%AF%AD%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0%E4%B8%80/</link>
        <pubDate>Sun, 05 Mar 2023 19:16:27 +0800</pubDate>
        
        <guid>https://ruizumoe.github.io/p/%E9%BA%A6%E7%94%B0%E7%89%A9%E8%AF%AD%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0%E4%B8%80/</guid>
        <description>&lt;img src="https://ruizumoe.github.io/img/story_of_wheat_field/wheatField.jpg" alt="Featured image of post 麦田物语开发日记(一)" /&gt;&lt;h1 id=&#34;素材整理&#34;&gt;素材整理&lt;/h1&gt;
&lt;h2 id=&#34;将图片设置设置为预设值&#34;&gt;将图片设置设置为预设值&lt;/h2&gt;
&lt;p&gt;将一个图片设置好需要的样式后，点击&lt;/p&gt;
&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221118223955310.png&#34; alt=&#34;image-20221118223955310&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;将该样式进行保存，然后可以应用于其他图片&lt;/p&gt;
&lt;h2 id=&#34;导入人物素材&#34;&gt;导入人物素材&lt;/h2&gt;
&lt;p&gt;为了保证角色的图层属于同一个类别，因此我们需要在一个父物体中设置&lt;code&gt;Sort Group&lt;/code&gt;用于归类所有的需要渲染的图层。&lt;/p&gt;
&lt;p&gt;由于是2D游戏有图层之间的关系，因此需要设置一个单独的渲染图层，在&lt;code&gt;edit layer&lt;/code&gt;中新增一个新的&lt;code&gt;sort layer&lt;/code&gt;，将&lt;code&gt;sort Layer&lt;/code&gt;设置为&lt;code&gt;Instance&lt;/code&gt;表示所有和人物有关的渲染都用该图层，并将所有的内容实例相关的sort layer都设置该图层&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221120170112371.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;父物体&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221120170134099.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;子物体&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;注意需要将所有的内容的渲染的参考点&lt;code&gt;Sprite Sort Point&lt;/code&gt;设置为&lt;code&gt;Pivot&lt;/code&gt;，这样才能保证覆盖的正确性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置图层覆盖条件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在Unity中默认以Z轴为渲染覆盖的判定，由于在2D俯视角游戏中没有z轴的概念，因此采用y轴作为判断覆盖的条件（即某个GO的y轴大于另一个GO的y轴的位置，即可以实现图层的覆盖）&lt;/p&gt;
&lt;p&gt;因此需要在&lt;code&gt;edit -&amp;gt; project setting-&amp;gt; graphics-&amp;gt;transparency Sort Axis&lt;/code&gt;中将x和z设置为0，y设置为1，同时向mode设置为&lt;code&gt;CustomAxis&lt;/code&gt; 即可实现。&lt;/p&gt;
&lt;h2 id=&#34;实现人物的移动&#34;&gt;实现人物的移动&lt;/h2&gt;
&lt;p&gt;为人物添加碰撞体和刚体（注意俯视角的游戏 重力一定要设置为0）&lt;/p&gt;
&lt;p&gt;人物的移动方向可以通过&lt;code&gt;input.getAxis&lt;/code&gt;的方式获得，而具体的方向需要通过x轴和y轴进行组合。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PlayerInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_inputX&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetAxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Horizontal&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_inputY&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetAxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Vertical&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 添加移动方向&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 限制按下两个方向键的时候的移动速度（防止斜方向的速度快于单一方向移动速度）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_inputY&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_inputX&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_inputX&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_speedLimit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_inputX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_inputY&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_speedLimit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_inputY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_movementInput&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Vector2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_inputX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_inputY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;具体的移动方式在2D横板游戏中是给&lt;code&gt;rigid body&lt;/code&gt;添加一个力，但在俯视角的游戏中通常是获得当前坐标，加上方向坐标  * 移动速度&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Movement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 乘以deltaTime是为了修正在不同设备上的差距&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MovePosition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_movementInput&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;speed&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deltaTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;两个方法的调用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;PlayerInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 由于FixedUptda是固定时间更新一次，因此不同帧数也会有相同的内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FixedUpdate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Movement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;绘制地图&#34;&gt;绘制地图&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;首先为需要执行的内容绘制对应的图层，比如多层的地面，水沟，土地等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221120235626249.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221120235626249&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sorting layer用于处理所有渲染的顺序关系，其中越靠后的物体优先级越高，越后渲染（在2D图层中，也就会在低优先级图层的上方）&lt;/p&gt;
&lt;p&gt;layers用于处理所有和碰撞和相机射线（是否被相机所显示，以及遮挡剔除效果）有关的内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;通过设置一个不变的场景来避免每次切换场景都重新生成数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新建一个场景，然后将场景直接拖入主场景的hierachy面板中，并删除其camera，然后将对应的地图结构存储进入新的场景&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221121000306105.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221121000306105&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这样我们就能始终用不变的人物信息和摄像头来控制场景&lt;/p&gt;
&lt;p&gt;此时可以将该场景作为一个模板数据，这样就可以创建多个不同的地图，完成不同场景的切换效果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;为tile maps设置调色盘&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击tile map后，选择&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221121001227280.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221121001227280&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;创建一个新的调色盘，然后将所有被切割好的素材拖拽进入调色盘中，就可以通过调色盘对地图进行绘制了，注意需要选中对应的Tile Map，该tile map需要先设置好对应的sorting layer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;有规律地绘制地图&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创建绘制规则地图的&lt;code&gt;2D-&amp;gt;Tile -&amp;gt; Rule Tile&lt;/code&gt; 然后设置具体的绘制规则&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221121200156809.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221121200156809&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;消除2D游戏的瓦片缝隙&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置一个Sprite Atlas用于将整个地图打包为一个图片&lt;code&gt;2D - Sprite Atlas&lt;/code&gt;, 然后将所有需要使用的素材都放入该Atlas中，并设置对应的压缩方式&lt;/p&gt;
&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221121204253332.png&#34; alt=&#34;image-20221121204253332&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;h2 id=&#34;设置相机&#34;&gt;设置相机&lt;/h2&gt;
&lt;p&gt;创建&lt;code&gt;Cinemachine&lt;/code&gt;，跟随玩家，然后再主相机中添加``设置适合于当前项目的内容&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221121204443759.png&#34; alt=&#34;image-20221121204443759&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后在CM中添加对应的&lt;code&gt;Pixel Perfect Camera&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;并且为CM设置合适的Dead Zoom等内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221121205209022.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221121205209022&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;为瓦片地图添加碰撞&#34;&gt;为瓦片地图添加碰撞&lt;/h2&gt;
&lt;p&gt;为设置的瓦片地图的&lt;code&gt;Collision&lt;/code&gt;层添加碰撞组件&lt;code&gt;Tilemap Collider 2D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同时为了保证我们添加的碰撞是一个整体，而不是独立的瓦片，因此需要添加组件&lt;code&gt;Composite Collider 2D&lt;/code&gt;(此时会自动添加&lt;code&gt;rigid body&lt;/code&gt;组件)&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;rigid body&lt;/code&gt;的类型改为静态，并将&lt;code&gt;tilemap collider 2D&lt;/code&gt;修改为&lt;code&gt;Used by composite&lt;/code&gt;，并将瓦片渲染关闭&lt;/p&gt;
&lt;p&gt;此时即可添加对应碰撞图层，且不会显示该图层。&lt;/p&gt;
&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221121223951995.png&#34; alt=&#34;image-20221121223951995&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;h2 id=&#34;设置树的预制体&#34;&gt;设置树的预制体&lt;/h2&gt;
&lt;p&gt;在生成树的预制体，首先需要自定义一颗树，为了定义树的动画，需要将树分为树冠和树桩，此时树的父物体并不能设置sorting group，否则会导致渲染的锚点改变，而出现渲染错误。&lt;/p&gt;
&lt;p&gt;然后单独为树冠设置动画即可。&lt;/p&gt;
&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221123193458900.png&#34; alt=&#34;image-20221123193458900&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;img src=&#34;https://ruizumoe.github.io/WFImg/image-20221123193520173.png&#34; alt=&#34;image-20221123193520173&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;动画则是将所有动画帧都放在动画序列上，在不同的时刻播放不同的树冠的图片即可&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
